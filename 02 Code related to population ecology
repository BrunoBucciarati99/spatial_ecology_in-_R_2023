spatstat package: package of statistycal analysis for spatial data
bei
plot(bei)
# changing dimension : cex
plot(bei, cex=0.5)
plot(bei, cex=0.2)
#changing the symbol : pch
plot(bei, cex=0.2, pch=19)
bei.extra
plot(bei.extra)
# using only part of the dataset
plot(bei.extra$elev)
# $ symbol means extracting from a dataset!!
#time to assign for an object
elevation <- bei.extra$elev
plot(elevation)
#second method to assign elements
elevation2 <- bei.extra[[1]]
plot(elevation2)

library(spatstat)
bei
plot(bei)
plot(bei, cex= 0.5)
#creation of a density map, passing from points to a continuous surface
density(bei)
densitymap<-density(bei)
densitymap
plot(densitymap)
#changing color palette
colorRampPalette(c("black","red","orange","yellow")
cl<- colorRampPalette(c("black","red","orange","yellow"))(100)
plot(densitymap, col=cl)
# il 100  indica il numero di colori del gradiente
cl<- colorRampPalette(c("black","red","orange","yellow"))(4)
plot(densitymap, col=cl)
# exercise: change color palette aavoiding to put green and red toghether 
#and blue and red toghether
cl<- colorRampPalette(c("black","green","blue","purple","yellow"))(100)
plot(densitymap, col=cl)

plot(bei.extra)
elev<-bei.extra[[1]]
plot(elev)
plot(elev, col=cl)

#vogliamo plottare inseme density and elevation(multiframe)
par(mfrow=c(1,2))
plot(densitymap)
plot(elev)

par(mfrow=c(2,1))
plot(densitymap)
plot(elev)

#voglio plottare bei, density map ed elevation insieme (quindi multiframe 
#con 3 colonne)
par(mfrow=c(1,3))
plot(bei)
plot(densitymap)
plot(elev)
